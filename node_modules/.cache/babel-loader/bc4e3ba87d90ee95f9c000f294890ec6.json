{"ast":null,"code":"var _jsxFileName = \"/Users/mehulshrinivastava/Documents/multi-file-upload/src/component/upload-file-component.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UploadService from '../services/upload-file-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFiles = this.selectFiles.bind(this);\n    this.upload = this.upload.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      progressInfo: [],\n      meassge: [],\n      fileInfo: []\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then(response => {\n      this.setState({\n        fileInfos: response.data\n      });\n    });\n  }\n\n  selectFile(event) {\n    this.setState({\n      progressInfo: [],\n      selectedFiles: event.target.files // You can access the list of files from event.target.files, which is a FileList object.\n\n    });\n  }\n\n  uploadFiles() {\n    const selectedFiles = this.state.selectedFiles;\n    let _progressInfos = []; // private variable can't be used outside class (supposed not to be)\n\n    for (let i = 0; i < selectedFiles.length; i++) {\n      _progressInfos.push({\n        percentage: 0,\n        fileName: selectedFiles[i].name\n      });\n    }\n\n    this.setState({\n      progressInfos: _progressInfos,\n      message: []\n    }, () => {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        this.upload(i, selectedFiles[i]);\n      }\n    });\n  }\n\n  upload(idx, file) {\n    let _progressInfos = [...this.state.progressInfos];\n    UploadService.upload(file, event => {\n      _progressInfos[idx].percentage = Math.round(100 * event.loaded / event.total);\n      this.setState({\n        _progressInfos\n      });\n    }).then(response => {\n      this.setState(prev => {\n        let nextMessage = [...prev.message, \"Uploaded the file successfully: \" + file.name];\n        return {\n          message: nextMessage\n        };\n      });\n      return UploadService.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      _progressInfos[idx].percentage = 0;\n      this.setState(prev => {\n        let nextMessage = [...prev.message, \"Could not upload the file: \" + file.name];\n        return {\n          progressInfos: _progressInfos,\n          message: nextMessage\n        };\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      progressInfos,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [progressInfos && progressInfos.map((progressInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: progressInfo.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar progress-bar-info\",\n            role: \"progressbar\",\n            \"aria-valuenow\": progressInfo.percentage,\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            style: {\n              width: progressInfo.percentage + \"%\"\n            },\n            children: [progressInfo.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-8\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"btn btn-default p-0\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: this.selectFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-sm\",\n            disabled: !selectedFiles,\n            onClick: this.uploadFiles,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), message.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-secondary\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: message.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"List of Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: fileInfos && fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.url,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mehulshrinivastava/Documents/multi-file-upload/src/component/upload-file-component.js"],"names":["React","Component","UploadService","UploadFiles","constructor","props","selectFiles","bind","upload","uploadFiles","state","selectedFiles","undefined","progressInfo","meassge","fileInfo","componentDidMount","getFiles","then","response","setState","fileInfos","data","selectFile","event","target","files","_progressInfos","i","length","push","percentage","fileName","name","progressInfos","message","idx","file","Math","round","loaded","total","prev","nextMessage","catch","render","map","index","width","item","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UploadService from '../services/upload-file-service';\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n  \tsuper(props);\n  \t\n  \tthis.selectFiles = this.selectFiles.bind(this);\n    this.upload = this.upload.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n  \t\n  \tthis.state = {\n  \t\tselectedFiles: undefined,\n  \t\tprogressInfo: [],\n  \t\tmeassge: [],\n  \t\tfileInfo: [],\n  \t};\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then((response) => {\n      this.setState({\n        fileInfos: response.data,\n      });\n    });\n  }\n\n  selectFile(event){\n  \tthis.setState({\n  \t\tprogressInfo: [],\n  \t\tselectedFiles: event.target.files,\n  \t\t// You can access the list of files from event.target.files, which is a FileList object.\n  \t});\n  }\n\n  uploadFiles() {\n    const selectedFiles = this.state.selectedFiles;\n\n    let _progressInfos = []; // private variable can't be used outside class (supposed not to be)\n\n    for (let i = 0; i < selectedFiles.length; i++) {\n      _progressInfos.push({ percentage: 0, fileName: selectedFiles[i].name });\n    }\n\n    this.setState(\n      {\n        progressInfos: _progressInfos,\n        message: [],\n      },\n      () => {\n        for (let i = 0; i < selectedFiles.length; i++) {\n          this.upload(i, selectedFiles[i]);\n        }\n      }\n    );\n  }\n\n  upload(idx, file) {\n    let _progressInfos = [...this.state.progressInfos];\n\n    UploadService.upload(file, (event) => {\n      _progressInfos[idx].percentage = Math.round((100 * event.loaded) / event.total);\n      this.setState({\n        _progressInfos,\n      });\n    })\n      .then((response) => {\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Uploaded the file successfully: \" + file.name];\n          return {\n            message: nextMessage\n          };\n        });\n\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          fileInfos: files.data,\n        });\n      })\n      .catch(() => {\n        _progressInfos[idx].percentage = 0;\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Could not upload the file: \" + file.name];\n          return {\n            progressInfos: _progressInfos,\n            message: nextMessage\n          };\n        });\n      });\n  }\n\n  render() {\n    const { selectedFiles, progressInfos, message, fileInfos } = this.state;\n    return (\n      <div>\n        {progressInfos &&\n          progressInfos.map((progressInfo, index) => (\n            <div className=\"mb-2\" key={index}>\n              <span>{progressInfo.fileName}</span>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar progress-bar-info\"\n                  role=\"progressbar\"\n                  aria-valuenow={progressInfo.percentage}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  style={{ width: progressInfo.percentage + \"%\" }}\n                >\n                  {progressInfo.percentage}%\n                </div>\n              </div>\n            </div>\n          ))}\n\n        <div className=\"row my-3\">\n          <div className=\"col-8\">\n            <label className=\"btn btn-default p-0\">\n              <input type=\"file\" multiple onChange={this.selectFiles} />\n            </label>\n          </div>\n\n          <div className=\"col-4\">\n            <button\n              className=\"btn btn-success btn-sm\"\n              disabled={!selectedFiles}\n              onClick={this.uploadFiles}\n            >\n              Upload\n            </button>\n          </div>\n        </div>\n\n        {message.length > 0 && (\n          <div className=\"alert alert-secondary\" role=\"alert\">\n            <ul>\n              {message.map((item, i) => {\n                return <li key={i}>{item}</li>;\n              })}\n            </ul>\n          </div>\n        )}\n\n        <div className=\"card\">\n          <div className=\"card-header\">List of Files</div>\n          <ul className=\"list-group list-group-flush\">\n            {fileInfos &&\n              fileInfos.map((file, index) => (\n                <li className=\"list-group-item\" key={index}>\n                  <a href={file.url}>{file.name}</a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n }"]},"metadata":{},"sourceType":"module"}